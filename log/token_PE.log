Command: vcs -R -sverilog /home/n26130126/Desktop/AOC_Final_Project/AIoC_Final_Project/./sim/token_PE_tb.sv \
-f /home/n26130126/Desktop/AOC_Final_Project/AIoC_Final_Project/./src/filelist.f \
-debug_access+all -full64 +incdir+/home/n26130126/Desktop/AOC_Final_Project/AIoC_Final_Project/./src+/home/n26130126/Desktop/AOC_Final_Project/AIoC_Final_Project/./include+/home/n26130126/Desktop/AOC_Final_Project/AIoC_Final_Project/./sim \
+notimingcheck -l /home/n26130126/Desktop/AOC_Final_Project/AIoC_Final_Project/./log/token_PE.log \
+define++FSDB_ALL+DEPTHWISE_STRIDE2_TYPE
*** Using c compiler gcc instead of cc ...
                         Chronologic VCS (TM)
       Version W-2024.09-SP2_Full64 -- Wed Jun 25 02:46:04 2025

                    Copyright (c) 1991 - 2025 Synopsys, Inc.
   This software and the associated documentation are proprietary to Synopsys,
 Inc. This software may only be used in accordance with the terms and conditions
 of a written license agreement with Synopsys, Inc. All other use, reproduction,
   or distribution of this software is strictly prohibited.  Licensed Products
     communicate with Synopsys servers for the purpose of providing software
    updates, detecting software piracy and verifying that customers are using
    Licensed Products in conformity with the applicable License Key for such
  Licensed Products. Synopsys will use information gathered in connection with
    this process to deliver software updates and pursue software pirates and
                                   infringers.

 Inclusivity & Diversity - Visit SolvNetPlus to read the "Synopsys Statement on
            Inclusivity and Diversity" (Refer to article 000036315 at
                        https://solvnetplus.synopsys.com)

Parsing design file '/home/n26130126/Desktop/AOC_Final_Project/AIoC_Final_Project/./sim/token_PE_tb.sv'
Parsing included file '../include/define.svh'.
Back to file '/home/n26130126/Desktop/AOC_Final_Project/AIoC_Final_Project/./sim/token_PE_tb.sv'.
Parsing included file '../sim/SRAM_64KB.sv'.
Back to file '/home/n26130126/Desktop/AOC_Final_Project/AIoC_Final_Project/./sim/token_PE_tb.sv'.
Parsing design file '../src/controller/token_engine/ifmap_fifo_ctrl.sv'
Parsing design file '../src/controller/token_engine/ipsum_fifo_ctrl.sv'
Parsing design file '../src/controller/token_engine/opsum_fifo_ctrl.sv'
Parsing design file '../src/controller/token_engine/weight_load_controller.sv'
Parsing design file '../src/controller/token_engine/pe_array_controller.sv'
Parsing design file '../src/controller/token_engine/Layer1_Controller.sv'
Parsing design file '../src/controller/token_engine/L2C_init_fifo_pe.sv'
Parsing design file '../src/controller/token_engine/L2C_preheat.sv'
Parsing design file '../src/controller/token_engine/L2C_normal_loop.sv'
Parsing design file '../src/controller/token_engine/ipsum_fifo_mask.sv'
Parsing design file '../src/controller/token_engine/opsum_fifo_mask.sv'
Parsing design file '../src/controller/token_engine/L3C_fifo_ctrl.sv'
Parsing design file '../src/controller/token_engine/token_arbiter.sv'
Parsing design file '../src/controller/token_engine/token_engine.sv'
Parsing design file '../src/CONV_unit/ifmap_fifo.sv'
Parsing design file '../src/CONV_unit/ifmap_fifo_bank.sv'
Parsing design file '../src/CONV_unit/opsum_fifo.sv'
Parsing design file '../src/CONV_unit/opsum_fifo_bank.sv'
Parsing design file '../src/CONV_unit/reducer.sv'
Parsing design file '../src/CONV_unit/pe.sv'
Parsing design file '../src/CONV_unit/pe_array.sv'
Parsing design file '../src/CONV_unit/ipsum_fifo.sv'
Parsing design file '../src/CONV_unit/ipsum_fifo_bank.sv'
Parsing design file '../src/CONV_unit/conv_unit.sv'
Parsing design file '../src/controller/calc_tile_n.sv'
Parsing included file '../include/define.svh'.
Back to file '../src/controller/calc_tile_n.sv'.
Parsing design file '../src/controller/TS_AXI_wrapper.sv'
Parsing included file '../include/define.svh'.
Back to file '../src/controller/TS_AXI_wrapper.sv'.
Parsing design file '../src/controller/Layer_Decoder.sv'
Parsing included file '../include/define.svh'.
Back to file '../src/controller/Layer_Decoder.sv'.
Parsing design file '../src/controller/DMA_address_generator.sv'

Warning-[DCTTSW] Decimal constant truncated
  Constant '4' is truncated to 2 bits: 0.
  "../src/controller/DMA_address_generator.sv", 130
  Source info:                     2'd3,2'd4: dma_len_o = (stride_i==2'd1)? 
  (tile_n_i+tile_n_i):tile_n_i;   //!: stride=1 = tile_n_i*2 stride2 = 
  tile_n_i  (2byte)


Warning-[DCTTSW] Decimal constant truncated
  Constant '4' is truncated to 2 bits: 0.
  "../src/controller/DMA_address_generator.sv", 190
  Source info:                 2'd4:begin // opsum PW || DW 

Parsing design file '../src/controller/Tile_Scheduler.sv'
Parsing included file '../include/define.svh'.
Back to file '../src/controller/Tile_Scheduler.sv'.
Parsing design file '../src/controller/Tile_Scheduler_old.sv'
Parsing included file '../include/define.svh'.
Back to file '../src/controller/Tile_Scheduler_old.sv'.
Top Level Modules:
       token_PE_tb
       TS_AXI_wrapper
       layer_decoder
       Tile_Scheduler
       Tile_Scheduler_old
No TimeScale specified

Warning-[TFIPC] Too few instance port connections
../src/controller/Layer_Decoder.sv, 137
layer_decoder, "calc_tile_n #(.GLB_BYTES(GLB_BYTES), .BYTES_I(BYTES_I), .BYTES_W(BYTES_W), .BYTES_P(BYTES_P)) calc_n_max_u( .layer_type (layer_type_i),  .out_C (out_C),  .kH (kH),  .kW (kW),  .tile_D (tile_D),  .tile_K (tile_K),  .tile_D_f (tile_D_f),  .tile_K_f (tile_K_f),  .M1 (M1),  .M2 (M2),  .M3 (M3),  .tile_n (tile_n));"
  The above instance has fewer port connections than the module definition.
  Please use '+lint=TFIPC-L' to print out detailed information of unconnected 
  ports.


Warning-[IWNF] Implicit wire has no fanin
../src/controller/token_engine/token_engine.sv, 250
  Implicit wire 'Already_Compute_Row' does not have any driver, please make 
  sure this is intended.


Warning-[PCWM-W] Port connection width mismatch
../src/controller/token_engine/token_engine.sv, 233
"L2C_init_fifo_pe #(96) L2C_init_fifo_pe_dut( .clk (clk),  .rst_n (rst_n),  .init_fifo_pe_state_i (init_fifo_pe_state),  .ifmap_glb_base_addr_i (ifmap_GLB_base_addr_byte),  .ipsum_glb_base_addr_i (ipsum_GLB_base_addr_byte),  .opsum_glb_base_addr_i (opsum_GLB_base_addr_byte),  .bias_glb_base_addr_i (bias_GLB_base_addr_byte),  .is_bias_i (is_bias_i),  .stride_i (stride_i),  .n_tile_is_first_i (n_tile_is_first_i),  .n_tile_is_last_i (n_tile_is_last_i),  .Already_Compute_Row_i (Already_Compute_Row),  .output_row_cnt_i (output_row_cnt),  .layer_type_i (layer_type_i),  .tile_n_i (tile_n_i),  .in_C_i (in_C_i),  .pad_R_i (pad_R_i),  .pad_L_i (pad_L_i),  .On_real_i (On_real_i),  .out_C_i (out_C_i),  .out_R_i (out_R_i),  .ifmap_fifo_base_addr_o (ifmap_fifo_base_ad ... "
  The following 1-bit expression is connected to 8-bit port 
  "Already_Compute_Row_i" of module "L2C_init_fifo_pe", instance 
  "L2C_init_fifo_pe_dut".
  Expression: Already_Compute_Row
  Instantiated module defined at: 
  "../src/controller/token_engine/L2C_init_fifo_pe.sv", 22
  Use +lint=PCWM for more details.


Warning-[PCWM-W] Port connection width mismatch
../src/controller/Tile_Scheduler.sv, 485
"dma_address_generator dma_address_generator( .clk (clk),  .rst_n (rst_n),  .tile_D_i (IC_real),  .tile_K_i (OC_real),  .tile_n_i (On_real),  .tile_D_f_i (tile_D_f_i),  .tile_K_f_i (tile_K_f_i),  .in_R_i (in_R_i),  .in_C_i (in_C_i),  .in_D_i (in_D_i),  .out_K_i (out_K_i),  .out_R_i (out_R_i),  .out_C_i (out_C_i),  .base_ifmap_i (base_ifmap_i),  .base_weight_i (base_weight_i),  .base_bias_i (base_bias_i),  .base_ofmap_i (base_ofmap_i),  .layer_type_i (layer_type_i),  .input_type (input_type),  .dma_interrupt_i (dma_interrupt_i),  .stride_i (stride_i),  .k_idx (k_idx),  .d_idx (d_idx),  .pass_done_i (pass_done_i),  .dma_base_addr_o (dma_addr_o),  .dma_len_o (dma_len_o),  .DMA_ifmap_finish (DMA_ifmap_finish),  .DMA_opsum_finish (DMA_opsum_finish),  .DMA_ips ... "
  The following 7-bit expression is connected to 32-bit port "tile_n_i" of 
  module "dma_address_generator", instance "dma_address_generator".
  Expression: On_real
  Instantiated module defined at: 
  "../src/controller/DMA_address_generator.sv", 6
  Use +lint=PCWM for more details.


Warning-[PCWM-W] Port connection width mismatch
../src/controller/Tile_Scheduler.sv, 485
"dma_address_generator dma_address_generator( .clk (clk),  .rst_n (rst_n),  .tile_D_i (IC_real),  .tile_K_i (OC_real),  .tile_n_i (On_real),  .tile_D_f_i (tile_D_f_i),  .tile_K_f_i (tile_K_f_i),  .in_R_i (in_R_i),  .in_C_i (in_C_i),  .in_D_i (in_D_i),  .out_K_i (out_K_i),  .out_R_i (out_R_i),  .out_C_i (out_C_i),  .base_ifmap_i (base_ifmap_i),  .base_weight_i (base_weight_i),  .base_bias_i (base_bias_i),  .base_ofmap_i (base_ofmap_i),  .layer_type_i (layer_type_i),  .input_type (input_type),  .dma_interrupt_i (dma_interrupt_i),  .stride_i (stride_i),  .k_idx (k_idx),  .d_idx (d_idx),  .pass_done_i (pass_done_i),  .dma_base_addr_o (dma_addr_o),  .dma_len_o (dma_len_o),  .DMA_ifmap_finish (DMA_ifmap_finish),  .DMA_opsum_finish (DMA_opsum_finish),  .DMA_ips ... "
  The following 7-bit expression is connected to 10-bit port "out_R_i" of 
  module "dma_address_generator", instance "dma_address_generator".
  Expression: out_R_i
  Instantiated module defined at: 
  "../src/controller/DMA_address_generator.sv", 6
  Use +lint=PCWM for more details.

Starting vcs inline pass...
25 modules and 0 UDP read.
recompiling module token_PE_tb
	However, due to incremental compilation, only 1 module needs to be compiled. 
make[1]: Entering directory '/home/n26130126/Desktop/AOC_Final_Project/AIoC_Final_Project/build/csrc' \

rm -f _cuarc*.so _csrc*.so pre_vcsobj_*.so share_vcsobj_*.so
if [ -x ../simv ]; then chmod a-x ../simv; fi
g++  -o ../simv      -rdynamic  -Wl,-rpath='$ORIGIN'/simv.daidir -Wl,-rpath=./simv.daidir \
-Wl,-rpath=/usr/cad/synopsys/vcs/2024.09-sp2/linux64/lib -L/usr/cad/synopsys/vcs/2024.09-sp2/linux64/lib \
-Wl,-rpath-link=./  /usr/lib64/libnuma.so.1   objs/amcQw_d.o   _73744_archive_1.so \
_prev_archive_1.so   SIM_l.o      rmapats_mop.o rmapats.o rmar.o rmar_nd.o  rmar_llvm_0_1.o \
rmar_llvm_0_0.o            -lvirsim -lerrorinf -lsnpsmalloc -lvfs    -lvcsnew -lsimprofile \
-luclinative /usr/cad/synopsys/vcs/2024.09-sp2/linux64/lib/vcs_tls.o   -Wl,-whole-archive \
-lvcsucli    -Wl,-no-whole-archive        _vcs_pli_stub_.o   /usr/cad/synopsys/vcs/2024.09-sp2/linux64/lib/vcs_save_restore_new.o \
/usr/cad/synopsys/verdi/2024.09-sp2/share/PLI/VCS/LINUX64/pli.a -ldl  -lc -lm -lpthread \
-ldl 
../simv up to date
make[1]: Leaving directory '/home/n26130126/Desktop/AOC_Final_Project/AIoC_Final_Project/build/csrc' \

Command: /home/n26130126/Desktop/AOC_Final_Project/AIoC_Final_Project/build/./simv +notimingcheck -a /home/n26130126/Desktop/AOC_Final_Project/AIoC_Final_Project/./log/token_PE.log +define++FSDB_ALL+DEPTHWISE_STRIDE2_TYPE
Chronologic VCS simulator copyright 1991-2024
Contains Synopsys proprietary information.
Compiler version W-2024.09-SP2_Full64; Runtime version W-2024.09-SP2_Full64;  Jun 25 02:46 2025
*Verdi* Loading libsscore_vcs202409.so
FSDB Dumper for VCS, Release Verdi_W-2024.09-SP2, Linux x86_64/64bit, 03/03/2025
(C) 1996 - 2025 by Synopsys, Inc.
*Verdi* FSDB WARNING: The FSDB file already exists. Overwriting the FSDB file may crash the programs that are using this file.
*Verdi* : Create FSDB file '../wave/top.fsdb'
*Verdi* : Begin traversing the scope (token_PE_tb.u_token_engine), layer (0).
*Verdi* : Enable +all, +struct and +mda dumping.
*Verdi* : End of traversing.
*Verdi* : Begin traversing the scope (token_PE_tb.u_conv_unit), layer (0).
*Verdi* : Enable +all, +struct and +mda dumping.
*Verdi* : End of traversing.
*Verdi* : Begin traversing the scope (token_PE_tb.u_SRAM), layer (0).
*Verdi* : Enable +all, +struct and +mda dumping.
*Verdi* : End of traversing.
===== SRAM initialized from depthwise_stride2_memory.hex =====
===== Golden data loaded from depthwise_stride2_golden.hex =====
===== SRAM initialized from depthwise_stride2_golden.hex =====
Time=0 rst_n=0 pass_done_o=0
Time=20 rst_n=1 pass_done_o=0
Simulation finished successfully at time 53835
===== Verifying opsum data in SRAM with depthwise_stride2_golden.hex =====
Match at index 0 (SRAM addr 0x00003000): SRAM=0x002d0021, Golden=0x002d0021
Match at index 1 (SRAM addr 0x00003001): SRAM=0x003c002e, Golden=0x003c002e
Match at index 2 (SRAM addr 0x00003002): SRAM=0x00360027, Golden=0x00360027
Match at index 3 (SRAM addr 0x00003003): SRAM=0x00340040, Golden=0x00340040
Match at index 4 (SRAM addr 0x00003004): SRAM=0x0033001f, Golden=0x0033001f
Match at index 5 (SRAM addr 0x00003005): SRAM=0x00450043, Golden=0x00450043
Match at index 6 (SRAM addr 0x00003006): SRAM=0x001f003a, Golden=0x001f003a
Match at index 7 (SRAM addr 0x00003007): SRAM=0x0037002a, Golden=0x0037002a
Match at index 8 (SRAM addr 0x00003008): SRAM=0x003a0048, Golden=0x003a0048
Match at index 9 (SRAM addr 0x00003009): SRAM=0x00590044, Golden=0x00590044
Match at index 10 (SRAM addr 0x0000300a): SRAM=0x003c0038, Golden=0x003c0038
Match at index 11 (SRAM addr 0x0000300b): SRAM=0x0041003b, Golden=0x0041003b
Match at index 12 (SRAM addr 0x0000300c): SRAM=0x0045002c, Golden=0x0045002c
Match at index 13 (SRAM addr 0x0000300d): SRAM=0x00460049, Golden=0x00460049
Match at index 14 (SRAM addr 0x0000300e): SRAM=0x002f0046, Golden=0x002f0046
Match at index 15 (SRAM addr 0x0000300f): SRAM=0x003c001e, Golden=0x003c001e
Match at index 16 (SRAM addr 0x00003010): SRAM=0x002d002d, Golden=0x002d002d
Match at index 17 (SRAM addr 0x00003011): SRAM=0x00390051, Golden=0x00390051
Match at index 18 (SRAM addr 0x00003012): SRAM=0x003d002c, Golden=0x003d002c
Match at index 19 (SRAM addr 0x00003013): SRAM=0x002c004b, Golden=0x002c004b
Match at index 20 (SRAM addr 0x00003014): SRAM=0x0055003d, Golden=0x0055003d
Match at index 21 (SRAM addr 0x00003015): SRAM=0x0056004e, Golden=0x0056004e
Match at index 22 (SRAM addr 0x00003016): SRAM=0x004b005a, Golden=0x004b005a
Match at index 23 (SRAM addr 0x00003017): SRAM=0x003e0037, Golden=0x003e0037
Match at index 24 (SRAM addr 0x00003018): SRAM=0x002a002b, Golden=0x002a002b
Match at index 25 (SRAM addr 0x00003019): SRAM=0x00450038, Golden=0x00450038
Match at index 26 (SRAM addr 0x0000301a): SRAM=0x0031001c, Golden=0x0031001c
Match at index 27 (SRAM addr 0x0000301b): SRAM=0x002f0037, Golden=0x002f0037
Match at index 28 (SRAM addr 0x0000301c): SRAM=0x002a002f, Golden=0x002a002f
Match at index 29 (SRAM addr 0x0000301d): SRAM=0x003b0033, Golden=0x003b0033
Match at index 30 (SRAM addr 0x0000301e): SRAM=0x00290031, Golden=0x00290031
Match at index 31 (SRAM addr 0x0000301f): SRAM=0x00290029, Golden=0x00290029
Match at index 32 (SRAM addr 0x00003020): SRAM=0x001b003c, Golden=0x001b003c
Match at index 33 (SRAM addr 0x00003021): SRAM=0x002f0036, Golden=0x002f0036
Match at index 34 (SRAM addr 0x00003022): SRAM=0x002c0032, Golden=0x002c0032
Match at index 35 (SRAM addr 0x00003023): SRAM=0x001f0025, Golden=0x001f0025
Match at index 36 (SRAM addr 0x00003024): SRAM=0x002c0020, Golden=0x002c0020
Match at index 37 (SRAM addr 0x00003025): SRAM=0x00350012, Golden=0x00350012
Match at index 38 (SRAM addr 0x00003026): SRAM=0x003d003c, Golden=0x003d003c
Match at index 39 (SRAM addr 0x00003027): SRAM=0x0038003e, Golden=0x0038003e
Match at index 40 (SRAM addr 0x00003028): SRAM=0x00340026, Golden=0x00340026
Match at index 41 (SRAM addr 0x00003029): SRAM=0x003b0012, Golden=0x003b0012
Match at index 42 (SRAM addr 0x0000302a): SRAM=0x0037003b, Golden=0x0037003b
Match at index 43 (SRAM addr 0x0000302b): SRAM=0x002d0021, Golden=0x002d0021
Match at index 44 (SRAM addr 0x0000302c): SRAM=0x0024002e, Golden=0x0024002e
Match at index 45 (SRAM addr 0x0000302d): SRAM=0x0028002d, Golden=0x0028002d
Match at index 46 (SRAM addr 0x0000302e): SRAM=0x00260036, Golden=0x00260036
Match at index 47 (SRAM addr 0x0000302f): SRAM=0x0020003d, Golden=0x0020003d
Match at index 48 (SRAM addr 0x00003030): SRAM=0x00320028, Golden=0x00320028
Match at index 49 (SRAM addr 0x00003031): SRAM=0x0037003b, Golden=0x0037003b
Match at index 50 (SRAM addr 0x00003032): SRAM=0x00400032, Golden=0x00400032
Match at index 51 (SRAM addr 0x00003033): SRAM=0x00210028, Golden=0x00210028
Match at index 52 (SRAM addr 0x00003034): SRAM=0x002d0032, Golden=0x002d0032
Match at index 53 (SRAM addr 0x00003035): SRAM=0x003b003b, Golden=0x003b003b
Match at index 54 (SRAM addr 0x00003036): SRAM=0x003b0024, Golden=0x003b0024
Match at index 55 (SRAM addr 0x00003037): SRAM=0x00350031, Golden=0x00350031
Match at index 56 (SRAM addr 0x00003038): SRAM=0x00350029, Golden=0x00350029
Match at index 57 (SRAM addr 0x00003039): SRAM=0x00280019, Golden=0x00280019
Match at index 58 (SRAM addr 0x0000303a): SRAM=0x00190027, Golden=0x00190027
Match at index 59 (SRAM addr 0x0000303b): SRAM=0x000f002f, Golden=0x000f002f
Match at index 60 (SRAM addr 0x0000303c): SRAM=0x002c001b, Golden=0x002c001b
Match at index 61 (SRAM addr 0x0000303d): SRAM=0x0039002f, Golden=0x0039002f
Match at index 62 (SRAM addr 0x0000303e): SRAM=0x0019002c, Golden=0x0019002c
Match at index 63 (SRAM addr 0x0000303f): SRAM=0x001a0028, Golden=0x001a0028
Match at index 64 (SRAM addr 0x00003040): SRAM=0x00230021, Golden=0x00230021
Match at index 65 (SRAM addr 0x00003041): SRAM=0x002b002c, Golden=0x002b002c
Match at index 66 (SRAM addr 0x00003042): SRAM=0x002e001c, Golden=0x002e001c
Match at index 67 (SRAM addr 0x00003043): SRAM=0x0039003a, Golden=0x0039003a
Match at index 68 (SRAM addr 0x00003044): SRAM=0x00270013, Golden=0x00270013
Match at index 69 (SRAM addr 0x00003045): SRAM=0x0027002a, Golden=0x0027002a
Match at index 70 (SRAM addr 0x00003046): SRAM=0x001b0024, Golden=0x001b0024
Match at index 71 (SRAM addr 0x00003047): SRAM=0x002d003b, Golden=0x002d003b
Match at index 72 (SRAM addr 0x00003048): SRAM=0x00250016, Golden=0x00250016
Match at index 73 (SRAM addr 0x00003049): SRAM=0x00190010, Golden=0x00190010
Match at index 74 (SRAM addr 0x0000304a): SRAM=0x00300024, Golden=0x00300024
Match at index 75 (SRAM addr 0x0000304b): SRAM=0x003a0036, Golden=0x003a0036
Match at index 76 (SRAM addr 0x0000304c): SRAM=0x0013001d, Golden=0x0013001d
Match at index 77 (SRAM addr 0x0000304d): SRAM=0x002a0027, Golden=0x002a0027
Match at index 78 (SRAM addr 0x0000304e): SRAM=0x003a002b, Golden=0x003a002b
Match at index 79 (SRAM addr 0x0000304f): SRAM=0x0024002e, Golden=0x0024002e
Match at index 80 (SRAM addr 0x00003050): SRAM=0x0022001b, Golden=0x0022001b
Match at index 81 (SRAM addr 0x00003051): SRAM=0x0014001a, Golden=0x0014001a
Match at index 82 (SRAM addr 0x00003052): SRAM=0x00250026, Golden=0x00250026
Match at index 83 (SRAM addr 0x00003053): SRAM=0x002d0014, Golden=0x002d0014
Match at index 84 (SRAM addr 0x00003054): SRAM=0x001f0019, Golden=0x001f0019
Match at index 85 (SRAM addr 0x00003055): SRAM=0x00250013, Golden=0x00250013
Match at index 86 (SRAM addr 0x00003056): SRAM=0x00120020, Golden=0x00120020
Match at index 87 (SRAM addr 0x00003057): SRAM=0x001a001a, Golden=0x001a001a
Match at index 88 (SRAM addr 0x00003058): SRAM=0x00190021, Golden=0x00190021
Match at index 89 (SRAM addr 0x00003059): SRAM=0x0019001d, Golden=0x0019001d
Match at index 90 (SRAM addr 0x0000305a): SRAM=0x00230021, Golden=0x00230021
Match at index 91 (SRAM addr 0x0000305b): SRAM=0x00360029, Golden=0x00360029
Match at index 92 (SRAM addr 0x0000305c): SRAM=0x002b002f, Golden=0x002b002f
Match at index 93 (SRAM addr 0x0000305d): SRAM=0x00220024, Golden=0x00220024
Match at index 94 (SRAM addr 0x0000305e): SRAM=0x00200028, Golden=0x00200028
Match at index 95 (SRAM addr 0x0000305f): SRAM=0x001f0020, Golden=0x001f0020
Match at index 96 (SRAM addr 0x00003060): SRAM=0x0012001d, Golden=0x0012001d
Match at index 97 (SRAM addr 0x00003061): SRAM=0x0024000c, Golden=0x0024000c
Match at index 98 (SRAM addr 0x00003062): SRAM=0x0019002b, Golden=0x0019002b
Match at index 99 (SRAM addr 0x00003063): SRAM=0x00210018, Golden=0x00210018
Match at index 100 (SRAM addr 0x00003064): SRAM=0x0019001b, Golden=0x0019001b
Match at index 101 (SRAM addr 0x00003065): SRAM=0x00390024, Golden=0x00390024
Match at index 102 (SRAM addr 0x00003066): SRAM=0x00240028, Golden=0x00240028
Match at index 103 (SRAM addr 0x00003067): SRAM=0x002a001b, Golden=0x002a001b
Match at index 104 (SRAM addr 0x00003068): SRAM=0x00310033, Golden=0x00310033
Match at index 105 (SRAM addr 0x00003069): SRAM=0x0028002a, Golden=0x0028002a
Match at index 106 (SRAM addr 0x0000306a): SRAM=0x00150024, Golden=0x00150024
Match at index 107 (SRAM addr 0x0000306b): SRAM=0x002c001d, Golden=0x002c001d
Match at index 108 (SRAM addr 0x0000306c): SRAM=0x001f002e, Golden=0x001f002e
Match at index 109 (SRAM addr 0x0000306d): SRAM=0x00220029, Golden=0x00220029
Match at index 110 (SRAM addr 0x0000306e): SRAM=0x0020002c, Golden=0x0020002c
Match at index 111 (SRAM addr 0x0000306f): SRAM=0x002b0025, Golden=0x002b0025
Match at index 112 (SRAM addr 0x00003070): SRAM=0x00300030, Golden=0x00300030
Match at index 113 (SRAM addr 0x00003071): SRAM=0x002f0026, Golden=0x002f0026
Match at index 114 (SRAM addr 0x00003072): SRAM=0x0044002a, Golden=0x0044002a
Match at index 115 (SRAM addr 0x00003073): SRAM=0x005c0045, Golden=0x005c0045
Match at index 116 (SRAM addr 0x00003074): SRAM=0x002c0047, Golden=0x002c0047
Match at index 117 (SRAM addr 0x00003075): SRAM=0x00350040, Golden=0x00350040
Match at index 118 (SRAM addr 0x00003076): SRAM=0x005c0058, Golden=0x005c0058
Match at index 119 (SRAM addr 0x00003077): SRAM=0x0048003a, Golden=0x0048003a
Match at index 120 (SRAM addr 0x00003078): SRAM=0x0047004c, Golden=0x0047004c
Match at index 121 (SRAM addr 0x00003079): SRAM=0x004e0062, Golden=0x004e0062
Match at index 122 (SRAM addr 0x0000307a): SRAM=0x00470049, Golden=0x00470049
Match at index 123 (SRAM addr 0x0000307b): SRAM=0x006c0065, Golden=0x006c0065
Match at index 124 (SRAM addr 0x0000307c): SRAM=0x00340045, Golden=0x00340045
Match at index 125 (SRAM addr 0x0000307d): SRAM=0x00380039, Golden=0x00380039
Match at index 126 (SRAM addr 0x0000307e): SRAM=0x0039003b, Golden=0x0039003b
Match at index 127 (SRAM addr 0x0000307f): SRAM=0x00340022, Golden=0x00340022
Match at index 128 (SRAM addr 0x00003080): SRAM=0x00500055, Golden=0x00500055
Match at index 129 (SRAM addr 0x00003081): SRAM=0x0046004f, Golden=0x0046004f
Match at index 130 (SRAM addr 0x00003082): SRAM=0x00420035, Golden=0x00420035
Match at index 131 (SRAM addr 0x00003083): SRAM=0x002c003b, Golden=0x002c003b
Match at index 132 (SRAM addr 0x00003084): SRAM=0x00370031, Golden=0x00370031
Match at index 133 (SRAM addr 0x00003085): SRAM=0x00230038, Golden=0x00230038
Match at index 134 (SRAM addr 0x00003086): SRAM=0x00440028, Golden=0x00440028
Match at index 135 (SRAM addr 0x00003087): SRAM=0x00370056, Golden=0x00370056
Match at index 136 (SRAM addr 0x00003088): SRAM=0x00140022, Golden=0x00140022
Match at index 137 (SRAM addr 0x00003089): SRAM=0x00420035, Golden=0x00420035
Match at index 138 (SRAM addr 0x0000308a): SRAM=0x005f005d, Golden=0x005f005d
Match at index 139 (SRAM addr 0x0000308b): SRAM=0x0048004e, Golden=0x0048004e
Match at index 140 (SRAM addr 0x0000308c): SRAM=0x004d005a, Golden=0x004d005a
Match at index 141 (SRAM addr 0x0000308d): SRAM=0x0038004e, Golden=0x0038004e
Match at index 142 (SRAM addr 0x0000308e): SRAM=0x0021001c, Golden=0x0021001c
Match at index 143 (SRAM addr 0x0000308f): SRAM=0x0038003a, Golden=0x0038003a
Match at index 144 (SRAM addr 0x00003090): SRAM=0x00360038, Golden=0x00360038
Match at index 145 (SRAM addr 0x00003091): SRAM=0x001f0013, Golden=0x001f0013
Match at index 146 (SRAM addr 0x00003092): SRAM=0x00360027, Golden=0x00360027
Match at index 147 (SRAM addr 0x00003093): SRAM=0x002c0038, Golden=0x002c0038
Match at index 148 (SRAM addr 0x00003094): SRAM=0x0033001c, Golden=0x0033001c
Match at index 149 (SRAM addr 0x00003095): SRAM=0x002b0031, Golden=0x002b0031
Match at index 150 (SRAM addr 0x00003096): SRAM=0x002d0033, Golden=0x002d0033
Match at index 151 (SRAM addr 0x00003097): SRAM=0x002c0014, Golden=0x002c0014
Match at index 152 (SRAM addr 0x00003098): SRAM=0x0035003f, Golden=0x0035003f
Match at index 153 (SRAM addr 0x00003099): SRAM=0x00310036, Golden=0x00310036
Match at index 154 (SRAM addr 0x0000309a): SRAM=0x002a0032, Golden=0x002a0032
Match at index 155 (SRAM addr 0x0000309b): SRAM=0x002c0024, Golden=0x002c0024
Match at index 156 (SRAM addr 0x0000309c): SRAM=0x0034003f, Golden=0x0034003f
Match at index 157 (SRAM addr 0x0000309d): SRAM=0x0012001f, Golden=0x0012001f
Match at index 158 (SRAM addr 0x0000309e): SRAM=0x0046002d, Golden=0x0046002d
Match at index 159 (SRAM addr 0x0000309f): SRAM=0x00270034, Golden=0x00270034
Match at index 160 (SRAM addr 0x000030a0): SRAM=0x0044003c, Golden=0x0044003c
Match at index 161 (SRAM addr 0x000030a1): SRAM=0x0031002e, Golden=0x0031002e
Match at index 162 (SRAM addr 0x000030a2): SRAM=0x0050003f, Golden=0x0050003f
Match at index 163 (SRAM addr 0x000030a3): SRAM=0x003c003f, Golden=0x003c003f
Match at index 164 (SRAM addr 0x000030a4): SRAM=0x00330033, Golden=0x00330033
Match at index 165 (SRAM addr 0x000030a5): SRAM=0x002a0019, Golden=0x002a0019
Match at index 166 (SRAM addr 0x000030a6): SRAM=0x001a003e, Golden=0x001a003e
Match at index 167 (SRAM addr 0x000030a7): SRAM=0x00420034, Golden=0x00420034
Match at index 168 (SRAM addr 0x000030a8): SRAM=0x0030002c, Golden=0x0030002c
Match at index 169 (SRAM addr 0x000030a9): SRAM=0x002e0030, Golden=0x002e0030
Match at index 170 (SRAM addr 0x000030aa): SRAM=0x0031002b, Golden=0x0031002b
Match at index 171 (SRAM addr 0x000030ab): SRAM=0x00200030, Golden=0x00200030
Match at index 172 (SRAM addr 0x000030ac): SRAM=0x00370022, Golden=0x00370022
Match at index 173 (SRAM addr 0x000030ad): SRAM=0x004a005b, Golden=0x004a005b
Match at index 174 (SRAM addr 0x000030ae): SRAM=0x0020002a, Golden=0x0020002a
Match at index 175 (SRAM addr 0x000030af): SRAM=0x002b002a, Golden=0x002b002a
Match at index 176 (SRAM addr 0x000030b0): SRAM=0x002b0024, Golden=0x002b0024
Match at index 177 (SRAM addr 0x000030b1): SRAM=0x001d003f, Golden=0x001d003f
Match at index 178 (SRAM addr 0x000030b2): SRAM=0x00210020, Golden=0x00210020
Match at index 179 (SRAM addr 0x000030b3): SRAM=0x003c005e, Golden=0x003c005e
Match at index 180 (SRAM addr 0x000030b4): SRAM=0x0043002c, Golden=0x0043002c
Match at index 181 (SRAM addr 0x000030b5): SRAM=0x002e0048, Golden=0x002e0048
Match at index 182 (SRAM addr 0x000030b6): SRAM=0x0035003c, Golden=0x0035003c
Match at index 183 (SRAM addr 0x000030b7): SRAM=0x0032003f, Golden=0x0032003f
Match at index 184 (SRAM addr 0x000030b8): SRAM=0x004b0035, Golden=0x004b0035
Match at index 185 (SRAM addr 0x000030b9): SRAM=0x002e0025, Golden=0x002e0025
Match at index 186 (SRAM addr 0x000030ba): SRAM=0x00350040, Golden=0x00350040
Match at index 187 (SRAM addr 0x000030bb): SRAM=0x00320045, Golden=0x00320045
Match at index 188 (SRAM addr 0x000030bc): SRAM=0x00220029, Golden=0x00220029
Match at index 189 (SRAM addr 0x000030bd): SRAM=0x0037002f, Golden=0x0037002f
Match at index 190 (SRAM addr 0x000030be): SRAM=0x00440047, Golden=0x00440047
Match at index 191 (SRAM addr 0x000030bf): SRAM=0x00140021, Golden=0x00140021
Match at index 192 (SRAM addr 0x000030c0): SRAM=0x001c0031, Golden=0x001c0031
Match at index 193 (SRAM addr 0x000030c1): SRAM=0x003f002b, Golden=0x003f002b
Match at index 194 (SRAM addr 0x000030c2): SRAM=0x00460021, Golden=0x00460021
Match at index 195 (SRAM addr 0x000030c3): SRAM=0x003d003a, Golden=0x003d003a
Match at index 196 (SRAM addr 0x000030c4): SRAM=0x001b001b, Golden=0x001b001b
Match at index 197 (SRAM addr 0x000030c5): SRAM=0x0045001d, Golden=0x0045001d
Match at index 198 (SRAM addr 0x000030c6): SRAM=0x00290018, Golden=0x00290018
Match at index 199 (SRAM addr 0x000030c7): SRAM=0x002b0025, Golden=0x002b0025
Match at index 200 (SRAM addr 0x000030c8): SRAM=0x0015001e, Golden=0x0015001e
Match at index 201 (SRAM addr 0x000030c9): SRAM=0x002a0030, Golden=0x002a0030
Match at index 202 (SRAM addr 0x000030ca): SRAM=0x00380029, Golden=0x00380029
Match at index 203 (SRAM addr 0x000030cb): SRAM=0x00240026, Golden=0x00240026
Match at index 204 (SRAM addr 0x000030cc): SRAM=0x00280028, Golden=0x00280028
Match at index 205 (SRAM addr 0x000030cd): SRAM=0x0038002b, Golden=0x0038002b
Match at index 206 (SRAM addr 0x000030ce): SRAM=0x00310026, Golden=0x00310026
Match at index 207 (SRAM addr 0x000030cf): SRAM=0x00220018, Golden=0x00220018
Match at index 208 (SRAM addr 0x000030d0): SRAM=0x00390032, Golden=0x00390032
Match at index 209 (SRAM addr 0x000030d1): SRAM=0x00240025, Golden=0x00240025
Match at index 210 (SRAM addr 0x000030d2): SRAM=0x0028002c, Golden=0x0028002c
Match at index 211 (SRAM addr 0x000030d3): SRAM=0x00120033, Golden=0x00120033
Match at index 212 (SRAM addr 0x000030d4): SRAM=0x0030002f, Golden=0x0030002f
Match at index 213 (SRAM addr 0x000030d5): SRAM=0x0024003d, Golden=0x0024003d
Match at index 214 (SRAM addr 0x000030d6): SRAM=0x001b001c, Golden=0x001b001c
Match at index 215 (SRAM addr 0x000030d7): SRAM=0x0034002f, Golden=0x0034002f
Match at index 216 (SRAM addr 0x000030d8): SRAM=0x002d001f, Golden=0x002d001f
Match at index 217 (SRAM addr 0x000030d9): SRAM=0x002c0029, Golden=0x002c0029
Match at index 218 (SRAM addr 0x000030da): SRAM=0x0020003c, Golden=0x0020003c
Match at index 219 (SRAM addr 0x000030db): SRAM=0x001d003d, Golden=0x001d003d
Match at index 220 (SRAM addr 0x000030dc): SRAM=0x0032002d, Golden=0x0032002d
Match at index 221 (SRAM addr 0x000030dd): SRAM=0x001e0020, Golden=0x001e0020
Match at index 222 (SRAM addr 0x000030de): SRAM=0x002c001a, Golden=0x002c001a
Match at index 223 (SRAM addr 0x000030df): SRAM=0x001b001d, Golden=0x001b001d
Match at index 224 (SRAM addr 0x000030e0): SRAM=0x00220030, Golden=0x00220030
Match at index 225 (SRAM addr 0x000030e1): SRAM=0x001c0035, Golden=0x001c0035
Match at index 226 (SRAM addr 0x000030e2): SRAM=0x002e002b, Golden=0x002e002b
Match at index 227 (SRAM addr 0x000030e3): SRAM=0x001e0023, Golden=0x001e0023
Match at index 228 (SRAM addr 0x000030e4): SRAM=0x00510033, Golden=0x00510033
Match at index 229 (SRAM addr 0x000030e5): SRAM=0x0041004c, Golden=0x0041004c
Match at index 230 (SRAM addr 0x000030e6): SRAM=0x005e003e, Golden=0x005e003e
Match at index 231 (SRAM addr 0x000030e7): SRAM=0x00410059, Golden=0x00410059
Match at index 232 (SRAM addr 0x000030e8): SRAM=0x00470032, Golden=0x00470032
Match at index 233 (SRAM addr 0x000030e9): SRAM=0x0062005d, Golden=0x0062005d
Match at index 234 (SRAM addr 0x000030ea): SRAM=0x0052004c, Golden=0x0052004c
Match at index 235 (SRAM addr 0x000030eb): SRAM=0x0049005f, Golden=0x0049005f
Match at index 236 (SRAM addr 0x000030ec): SRAM=0x00440041, Golden=0x00440041
Match at index 237 (SRAM addr 0x000030ed): SRAM=0x0056004b, Golden=0x0056004b
Match at index 238 (SRAM addr 0x000030ee): SRAM=0x00430033, Golden=0x00430033
Match at index 239 (SRAM addr 0x000030ef): SRAM=0x00510044, Golden=0x00510044
Match at index 240 (SRAM addr 0x000030f0): SRAM=0x0053005d, Golden=0x0053005d
Match at index 241 (SRAM addr 0x000030f1): SRAM=0x00350048, Golden=0x00350048
Match at index 242 (SRAM addr 0x000030f2): SRAM=0x00420044, Golden=0x00420044
Match at index 243 (SRAM addr 0x000030f3): SRAM=0x003b004b, Golden=0x003b004b
Match at index 244 (SRAM addr 0x000030f4): SRAM=0x004f004f, Golden=0x004f004f
Match at index 245 (SRAM addr 0x000030f5): SRAM=0x0046005a, Golden=0x0046005a
Match at index 246 (SRAM addr 0x000030f6): SRAM=0x002e002e, Golden=0x002e002e
Match at index 247 (SRAM addr 0x000030f7): SRAM=0x002f002c, Golden=0x002f002c
Match at index 248 (SRAM addr 0x000030f8): SRAM=0x005b0040, Golden=0x005b0040
Match at index 249 (SRAM addr 0x000030f9): SRAM=0x005a0056, Golden=0x005a0056
Match at index 250 (SRAM addr 0x000030fa): SRAM=0x0046003a, Golden=0x0046003a
Match at index 251 (SRAM addr 0x000030fb): SRAM=0x0048004d, Golden=0x0048004d
Match at index 252 (SRAM addr 0x000030fc): SRAM=0x00620060, Golden=0x00620060
Match at index 253 (SRAM addr 0x000030fd): SRAM=0x0042004d, Golden=0x0042004d
Match at index 254 (SRAM addr 0x000030fe): SRAM=0x00440045, Golden=0x00440045
Match at index 255 (SRAM addr 0x000030ff): SRAM=0x003e0036, Golden=0x003e0036
Match at index 256 (SRAM addr 0x00003100): SRAM=0x002d004c, Golden=0x002d004c
Match at index 257 (SRAM addr 0x00003101): SRAM=0x003a003f, Golden=0x003a003f
Match at index 258 (SRAM addr 0x00003102): SRAM=0x0018001e, Golden=0x0018001e
Match at index 259 (SRAM addr 0x00003103): SRAM=0x00230016, Golden=0x00230016
Match at index 260 (SRAM addr 0x00003104): SRAM=0x001e0034, Golden=0x001e0034
Match at index 261 (SRAM addr 0x00003105): SRAM=0x0013002a, Golden=0x0013002a
Match at index 262 (SRAM addr 0x00003106): SRAM=0x002b0030, Golden=0x002b0030
Match at index 263 (SRAM addr 0x00003107): SRAM=0x00240025, Golden=0x00240025
Match at index 264 (SRAM addr 0x00003108): SRAM=0x004b003b, Golden=0x004b003b
Match at index 265 (SRAM addr 0x00003109): SRAM=0x002f002b, Golden=0x002f002b
Match at index 266 (SRAM addr 0x0000310a): SRAM=0x00120026, Golden=0x00120026
Match at index 267 (SRAM addr 0x0000310b): SRAM=0x003e0026, Golden=0x003e0026
Match at index 268 (SRAM addr 0x0000310c): SRAM=0x002e0012, Golden=0x002e0012
Match at index 269 (SRAM addr 0x0000310d): SRAM=0x00320031, Golden=0x00320031
Match at index 270 (SRAM addr 0x0000310e): SRAM=0x002d003d, Golden=0x002d003d
Match at index 271 (SRAM addr 0x0000310f): SRAM=0x003c0034, Golden=0x003c0034
Match at index 272 (SRAM addr 0x00003110): SRAM=0x001d0027, Golden=0x001d0027
Match at index 273 (SRAM addr 0x00003111): SRAM=0x00360024, Golden=0x00360024
Match at index 274 (SRAM addr 0x00003112): SRAM=0x00290033, Golden=0x00290033
Match at index 275 (SRAM addr 0x00003113): SRAM=0x00230036, Golden=0x00230036
Match at index 276 (SRAM addr 0x00003114): SRAM=0x002e003a, Golden=0x002e003a
Match at index 277 (SRAM addr 0x00003115): SRAM=0x0025001f, Golden=0x0025001f
Match at index 278 (SRAM addr 0x00003116): SRAM=0x001d002b, Golden=0x001d002b
Match at index 279 (SRAM addr 0x00003117): SRAM=0x002c0022, Golden=0x002c0022
Match at index 280 (SRAM addr 0x00003118): SRAM=0x003e002a, Golden=0x003e002a
Match at index 281 (SRAM addr 0x00003119): SRAM=0x00250031, Golden=0x00250031
Match at index 282 (SRAM addr 0x0000311a): SRAM=0x002e0017, Golden=0x002e0017
Match at index 283 (SRAM addr 0x0000311b): SRAM=0x003e001f, Golden=0x003e001f
Match at index 284 (SRAM addr 0x0000311c): SRAM=0x00360046, Golden=0x00360046
Verification PASSED: All opsum data matches golden data!
$finish called from file "/home/n26130126/Desktop/AOC_Final_Project/AIoC_Final_Project/./sim/token_PE_tb.sv", line 499.
$finish at simulation time                53835
           V C S   S i m u l a t i o n   R e p o r t 
Time: 53835
CPU Time:      1.990 seconds;       Data structure size:   0.8Mb
Wed Jun 25 02:46:10 2025
CPU time: 2.897 seconds to compile + .255 seconds to elab + .183 seconds to link + 2.020 seconds in simulation
